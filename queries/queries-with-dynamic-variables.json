{
  "excel": {
    "db": "sampleDB",
    "output": "d:/temp/dynamic_variables_test_2024.xlsx",
    "maxRows": 20,
    "style": "modern"
  },
  "vars": {
    "envType": "Production",
    "startDate": "2024-01-01",
    "endDate": "2024-06-30",
    "regionList": ["Seoul", "Busan"],
    "statusList": ["ACTIVE", "PENDING", "COMPLETED"],
    "categoryIds": [1, 2, 3, 5],
    "maxRows": 1000
  },
  "dynamicVars": [
         {
      "name": "customerData",
      "description": "Customer data by column",
      "database": "sampleDB",
      "query": "SELECT CustomerID, CustomerName, City, Region, CustomerType FROM SampleDB.dbo.Customers WHERE IsActive = 1 ORDER BY CustomerID"
    },
    {
      "name": "orderDetails",
      "type": "key_value_pairs",
      "description": "Order detail information",
      "database": "sampleDB",
      "query": "SELECT OrderID, OrderDetailID FROM SampleDB.dbo.OrderDetails ORDER BY OrderID"
    },
                   {
        "name": "activeOrders",
        "description": "Active orders list",
        "database": "sampleDB",
        "query": "SELECT OrderID FROM SampleDB.dbo.Orders WHERE OrderStatus = 'Pending' ORDER BY OrderID"
      },
           {
        "name": "recentOrders",
        "description": "Recent orders information",
        "database": "sampleDB",
        "query": "SELECT OrderID, OrderNumber, OrderDate FROM SampleDB.dbo.Orders WHERE OrderDate >= '${startDate}' AND OrderDate <= '${endDate}' AND OrderDate >= DATEADD(day, -30, '${CURRENT_DATE}') ORDER BY OrderDate DESC"
      }
  ],
  "queryDefs": {
    "customer_base": {
      "name": "customer_base",
      "description": "Base customer query",
      "query": "SELECT c.CustomerID as CustomerID, c.CustomerName as CustomerName, c.City as City, c.Region as Region, c.CustomerType as CustomerType FROM SampleDB.dbo.Customers c WHERE c.CustomerID IN (${customerData.CustomerID}) AND c.Region IN (${regionList}) ORDER BY c.CustomerID"
    }
  },
  "sheets": [
    {
      "name": "${envType}_DynamicVar_Test",
      "use": true,
      "queryRef": "customer_base",
      "aggregateColumn": "Region",
      "maxRows": 100,
      "db": "sampleDB",
      "params": {
        "regionList": ["Seoul", "Busan", "Daegu"],
        "startDate": "2024-03-01",
        "endDate": "2024-12-31"
      }
    },
    {
      "name": "OrderDetail_DynamicVar_Test2",
      "use": true,
      "aggregateColumn": "OrderStatus",
             "query": "SELECT o.OrderID as OrderID, o.OrderNumber as OrderNumber, o.OrderStatus as OrderStatus, od.OrderDetailID as DetailID, FORMAT(o.TotalAmount, 'N0') as TotalAmount FROM SampleDB.dbo.Orders o INNER JOIN SampleDB.dbo.OrderDetails od ON o.OrderID = od.OrderID WHERE o.OrderID IN (${orderDetails.OrderID}) AND o.OrderID IN (${activeOrders.OrderID}) ORDER BY o.OrderID DESC"
    },
    {
      "name": "OrderDetail_DynamicVar_Test",
      "use": true,
      "aggregateColumn": "OrderStatus",
      "query": "SELECT o.OrderNumber as OrderNumber, FORMAT(o.OrderDate, 'yyyy-MM-dd') as OrderDate, o.OrderStatus as OrderStatus, c.CustomerName as CustomerName, FORMAT(o.TotalAmount, 'N0') as TotalAmount FROM SampleDB.dbo.Orders o INNER JOIN SampleDB.dbo.Customers c ON o.CustomerID = c.CustomerID WHERE o.OrderID IN (${recentOrders.OrderID}) AND o.OrderStatus IN (${statusList}) ORDER BY o.OrderDate DESC"
    },
    {
      "name": "Combined_DynamicVar_Test",
      "use": true,
             "query": "SELECT c.CustomerName as CustomerName, c.Region as Region, COUNT(o.OrderID) as OrderCount, FORMAT(SUM(o.TotalAmount), 'N0') as TotalOrderAmount FROM SampleDB.dbo.Customers c INNER JOIN SampleDB.dbo.Orders o ON c.CustomerID = o.CustomerID WHERE c.CustomerID IN (${customerData.CustomerID}) AND c.Region IN (${customerData.Region}) AND o.OrderID IN (${activeOrders.OrderID}) AND o.OrderDate >= '${startDate}' AND o.OrderDate <= '${endDate}' GROUP BY c.CustomerName, c.Region ORDER BY TotalOrderAmount DESC"
    },
    {
      "name": "TimeFunc_DynamicVar_Test",
      "use": true,
      "query": "SELECT 'Current Time' as Category, '${CURRENT_TIMESTAMP}' as CurrentTime, '${CURRENT_DATE}' as CurrentDate, '${CURRENT_TIME}' as CurrentTimeOnly, '${UNIX_TIMESTAMP}' as UnixTimestamp, '${GETDATE}' as SQLServer_GETDATE UNION ALL SELECT 'Dynamic Variable Test' as Category, CONVERT(VARCHAR, GETDATE(), 120) as CurrentTime, CONVERT(VARCHAR, GETDATE(), 23) as CurrentDate, CONVERT(VARCHAR, GETDATE(), 108) as CurrentTimeOnly, DATEDIFF(SECOND, '1970-01-01', GETDATE()) as UnixTimestamp, GETDATE() as SQLServer_GETDATE"
    }
  ]
}
